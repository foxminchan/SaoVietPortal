version: '3.7'
services:

  # SaoViet API
  saoviet-portal:
    image: ghcr.io/foxminchan/saovietportal/saoviet-portal:${IMAGE_TAG:-0.1.3}
    build:
      context: .
      dockerfile: ./src/Portal.Api/Dockerfile
    container_name: saoviet-portal
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Data Source=ACER-ASPIRE\\MAINSERVER;Initial Catalog=SaoVietPortal;Integrated Security=True;TrustServerCertificate=True
      - UseTracingExporter=otlp
      - UseMetricsExporter=otlp
      - UseLogExporter=otlp
      - AspNetCoreInstrumentation__RecordException=true
      - Otlp__Endpoint=http://otel-collector:4317
    ports:
      - "5000:80"
    depends_on:
      - sqlserver
      - redis
    restart: always
    networks:
      - saoviet-network

  # Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - saoviet-network
    volumes:
      - cache:/data

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger-all-in-one
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - saoviet-network

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    container_name: zipkin-all-in-one
    ports:
      - "9411:9411"
    networks:
      - saoviet-network

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib-dev:latest
    container_name: opentelemetry-collector
    command: [ "--config=/etc/otel-collector-config.yaml", "" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
    networks:
      - saoviet-network

  # ELK
  elk:
    image: sebp/elk:latest
    container_name: elk
    volumes:
      - ./elk/logstash-config.conf:/etc/logstash/conf.d/logstash.conf
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - LOGSTASH_START=0
      - LOGSTASH_HEAP_SIZE=512m
      - KIBANA_START=0
      - KIBANA_HEAP_SIZE=512m
    ports:
      - "5601:5601"
      - "9200:9200"
      - "5044:5044"
    networks:
      - saoviet-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prom/prometheus.yml:/etc/prometheus/prometheus.yml
    environment:
      - TZ=Asia/Ho_Chi_Minh
    ports:
      - "9090:9090"
    networks:
      - saoviet-network

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "30091:3000"
    volumes:
      - ./grafana-data/data:/var/lib/grafana
    networks:
      - saoviet-network

  # seq
  seq:
    image: datalust/seq:latest
    container_name: seq
    restart: on-failure
    ports:
      - "5341:80"
    networks:
      - saoviet-network

networks:
  saoviet-network:
    driver: bridge

volumes:
  cache:
    driver: local

  grafana-data:
    driver: local

  sqlserver-data:
    driver: local
